group 'com.tisza'

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

version getVersionName()

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

mainClassName = "com.tisza.tarock.Main"

sourceCompatibility = 1.11

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'com.google.protobuf:protobuf-java:3.10.0'
    compile 'org.json:json:20190722'
    compile 'com.google.api-client:google-api-client:1.30.4'
    compile "org.flywaydb:flyway-core:6.0.6"
    compile 'com.github.davidmoten:rxjava2-jdbc:0.2.5'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.29'
    compile 'com.google.api-client:google-api-client:1.30.6'
    compile 'com.google.firebase:firebase-admin:6.12.1'
    compile 'mysql:mysql-connector-java:8.0.19'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
    }
}

sourceSets {
    main {
        proto {
            srcDir '../proto'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }
}
